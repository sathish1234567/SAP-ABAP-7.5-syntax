Corresponding --> key word
- Used for move the data between the two internal tables.
- Both internal tables have different structures.
- Both internal tables have the same structures also it will work.


- Both internal tables have the same structures also it will work. 
Ex: itab2 = iteab1. - structures are same.
    append lines of itab1 to itab2. - structures are same.
    itab2 = corresponsing #( itab1 ). - structures are different.

Corresponding #( <itab> )- Moves data between the internal tables for the matching columns.
corresponding with except - move the data of the selected matching columns and restrict to the specific columns using except, those are not transferred to the another internal table..
corresponding with mapping - map data of one column to another column. 
use:

types: begin of ty_data1,
        c1 type i,
        c2 type i,
        c3 type i,
        c4 type i,
       end of ty_Data1.
       
 types : begin of ty_Data2,
            c5 type i,
            c6 type i,
            c7 type i,
            c1 type i,
            c2 type i,
         end of ty_Data2.
 
 data : itba1 type table of ty_Data1.
       
 itab1 = value #( ( c1 = 1 c2 = 2 c3 = 3 c4 = 4 )
                  ( c1 = 10 c2 = 20 c3 = 30 c4 = 40 )
                ).
 
 " create one more internal table with data type ty_data2 and pass the itab1 data to that internal table.
 
 data(itab2) = corresponding #( itab1 ).  <-- all the fields form itab1 map to itab2. 
 " here c1 and c2 data pass to the itab2 remain data is 0.
 
 itab2.
 _______
 C5   C6   C7   C1    C2
 0    0    0    1     2
 0    0    0    10    20
 
 why c5, c6, c7 values passed '0' because of c5, c6, c7 fields are not existed in itab1 so itab1 and itab2 common fields is c1 and c2 , so those fields data are passed.
 
 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 
 in this case i removed c1 and c2 from ty_Data2.
 
  types : begin of ty_Data2,
            c5 type i,
            c6 type i,
            c7 type i,
         end of ty_Data2.
         
    data : itba1 type table of ty_Data1.
       
 itab1 = value #( ( c1 = 1 c2 = 2 c3 = 3 c4 = 4 )
                  ( c1 = 10 c2 = 20 c3 = 30 c4 = 40 )
                ).
 
  data(itab2) = corresponding ty_Data2( itab1 ).  <-- nothing get mapped because there is no common fields in between the itab1 and itab2
  
  cl_demo_output=>display( itab2 ).
  
  itab2 <- no data ....
  c5    c6    c7
  
  
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  explictly map: using mapping keyword
  
  i need to map expilcitly from itab1 to itab2
  
   types : begin of ty_Data2,
            c5 type i,
            c6 type i,
            c7 type i,
         end of ty_Data2.
         
    data : itba1 type table of ty_Data1.
       
 itab1 = value #( ( c1 = 1 c2 = 2 c3 = 3 c4 = 4 )
                  ( c1 = 10 c2 = 20 c3 = 30 c4 = 40 )
                ).
                
  explictly mapping :
  
  data(itab2) = value #( itab1 mapping c5 = c1 c6 = c2 c7 = c3 ).
  
  cl_Demo_output=>display( itab2 ).
  
  itab2.
  _____
  C5    c6    c7
  1     2     3
  10    20    30
  
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

"c1 c2 c3 c4 are available in ty_data1 those fields are taken into the ty_Data2.
  types : begin of ty_Data2,
            c5 type i,
            c6 type i,
            c7 type i,
            c1 type i,
            c2 type i,
            c3 type i,
            c4 type i,
         end of ty_Data2.
         
    data : itba1 type table of ty_Data1.
       
 itab1 = value #( ( c1 = 1 c2 = 2 c3 = 3 c4 = 4 )
                  ( c1 = 10 c2 = 20 c3 = 30 c4 = 40 )
                ).
  
 data( itab2 ) = corresponding #( itab1 maping mapping c5 = c1 c6 = c2 c7 = c3 ).
 
 
  cl_Demo_output=>display( itab2 ).
  
  itab2
  ________
  c5    c6    c7    c1    c2    c3    c4
  1     2     3     1     2     3     4
  10    20    30    10    20    30    40
  
  here c5 c6 c7 data passed expicitly from itab1 to itab2 colums and remaining columns such as c1 c2  c3  c4 are common in itab1 and itab2.
  so automatically copied from itab1 to itab2.
  
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  
  except the perticular columns .
  
  usine except keyword.
  
  excepting c3 and c4 columns.
  
    types : begin of ty_Data2,
            c5 type i,
            c6 type i,
            c7 type i,
            c1 type i,
            c2 type i,
            c3 type i,
            c4 type i,
         end of ty_Data2.
         
    data : itba1 type table of ty_Data1.
       
 itab1 = value #( ( c1 = 1 c2 = 2 c3 = 3 c4 = 4 )
                  ( c1 = 10 c2 = 20 c3 = 30 c4 = 40 )
                ).
  
 data( itab2 ) = corresponding #( itab1 mapping c5 = c1 c6 = c2 c7 = c3 except c3 c4). < here not passing the data and but 0 data available
 
 
  cl_Demo_output=>display( itab2 ).
  
  itab2
  ________
  c5    c6    c7    c1    c2   c3   c4 
  1     2     3     1     2     0   0
  10    20    30    10    20    0   0
 
